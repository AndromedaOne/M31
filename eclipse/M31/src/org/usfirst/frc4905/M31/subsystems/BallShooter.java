// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4905.M31.subsystems;

import org.usfirst.frc4905.M31.OI;
import org.usfirst.frc4905.M31.RobotMap;
import org.usfirst.frc4905.M31.commands.*;
import com.ctre.CANTalon;
import com.ctre.CANTalon.FeedbackDevice;
import com.ctre.CANTalon.TalonControlMode;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class BallShooter extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon ballMotor = RobotMap.ballShooterBallMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void test() {
    	//ballMotor.changeControlMode(TalonControlMode.Speed);
    	ballMotor.set(-0.1);
    	System.out.println("max speed: " + ballMotor.getSpeed());
    }
    public void debug(Joystick driveGamepad){
    	
    	double input = OI.getLeftStickVertical(driveGamepad) * 0.8;
    	//ballMotor.changeControlMode(TalonControlMode.Speed);
    	ballMotor.set(input);
    	System.out.print("Input speed: " + input);
    	System.out.println("Actual: " + ballMotor.getSpeed());
    	
    }
    
    public void debugInit(){
    	ballMotor.setFeedbackDevice(FeedbackDevice.QuadEncoder);
    	ballMotor.setProfile(0);
    	ballMotor.setP(0);
    	ballMotor.setI(0);
    	ballMotor.setD(0);
    	ballMotor.setF(0.15);
    	ballMotor.configNominalOutputVoltage(+0.0f, -0.0f);
    	ballMotor.configPeakOutputVoltage(+12.0f, -12.0f);
    	
    	ballMotor.configEncoderCodesPerRev(48);
    }
}

